class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        dfs(n, res, "", 0, 0);
        return res;

    }

    public void dfs (int n, List<String> res, String path, int left, int right) {
        if (left > n || left < right) return;
        if (path.length() == n * 2) {
            res.add(path);
            return;
        }

        dfs(n, res, path + "(", left + 1, right);
        dfs(n, res, path + ")", left, right + 1);
    }
}
//runtime:2 ms
//memory:41.5 MB
