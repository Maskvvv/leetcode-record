## 模拟

由于 `startValue` 可设定的最小值为 $1$，我们可以先统计当 `startValue = 1` 时，累加过程中的最小值 `min`。

根据 `min` 是否符合规定（大于等于 $1$）来决定如何调整：

* 若 `min` 满足大于等于 $1$，则 `startValue` 可取最小值 $1$；
* 若 `min` 不满足大于等于 $1$，计算将 `min` 调整到 $1$ 所需要的值（即 `1 - min`），将其累加到起始值上，即得答案 `2 - min`。

代码：

* []

```Java
class Solution {
    public int minStartValue(int[] nums) {
        int n = nums.length, min = 0x3f3f3f3f;
        for (int i = 0, j = 1; i < n; i++) {
            j = j + nums[i];
            min = Math.min(min, j);
        }
        return min < 1 ? 2 - min : 1;
    }
}
```

* []

```TypeScript
function minStartValue(nums: number[]): number {
    let n = nums.length, min = 0x3f3f3f3f
    for (let i = 0, j = 1; i < n; i++) {
        j = j + nums[i]
        min = Math.min(min, j)
    }
    return min < 1 ? 2 - min : 1
};
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
